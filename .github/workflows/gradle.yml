name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '18'

      - name: Build with Gradle
        run: ./gradlew clean build --info

      - name: Build Docker image
        run: docker build -t xi1yuan/back_heewon_yubin:journey .

      - name: Run tests
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-app-image ${{ secrets.DOCKER_USERNAME }}/back_heewon_yubin:journey
          docker push ${{ secrets.DOCKER_USERNAME }}/back_heewon_yubin:journey

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/back_heewon_yubin:journey
            docker stop my-running-container || true
            docker rm my-running-container || true
            docker run -d --name my-running-container -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/back_heewon_yubin:journey
          EOF
